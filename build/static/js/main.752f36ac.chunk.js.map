{"version":3,"sources":["Components/Navigation.js","Components/Addexample.js","Components/Update.js","Components/Display.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","handleSearchChange","event","setState","Value","target","value","state","books","search","console","log","this","axios","get","then","res","data","componentDidMount","id","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onSubmit","handleSubmit","onChange","map","disp","Title","Author","Publisher","key","ISBN","PublicationDate","Price","Genre","Format","React","Component","Addexample","handleChange","handleChange1","handleTitleChange","handlePublicationDateChange","handlePublisherChange","handlePriceChange","handleGenreChange","handleFormatChange","preventDefault","Store234","post","alert","for","name","Update","put","Display","delete","ReactDOM","render","document","getElementById","onClick","upd","bind","delbooks","App","path","component","to","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.752f36ac.chunk.js","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\n\n\nclass Navbar extends React.Component{\n  constructor(props){\n    super()\n    this.state={\n      books:[\n        \n      ],\n    search:'',\n    Value:''\n    }\n\n  }\n\n\n\n  componentDidMount(){\n    console.log(this.state.Value);\n    axios.get('http://172.105.60.143:3000/Store234'+'/'+this.state.Value)\n    .then(res=>{\n      const books=res.data;\n     \n      this.setState({books});\n    \n    })\n  }\n\n\n\n\n\n\n  handleSearchChange=event=>{\n    this.setState({Value:event.target.value,\n       \n   });\n  \n}\n\n\n\n\nhandleSubmit(){\n  this.componentDidMount()\n}\n  render(){\n\n\n  return(\n    <div >\n    <nav id=\"nav\" className=\"navbar navbar-expand-md navbar-dark\">\n    <div className=\"container\">\n  <a id=\"head\"className=\"navbar-brand\" href=\"#\"><h3>Book Inventory</h3></a>\n\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"#navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbar\">\n  <form className=\"form-inline my-2 my-lg-0 ml-auto\" onSubmit={this.handleSubmit}>\n      <input className=\"form-control mr-sm-2\" type=\"search\" value={this.state.value}  aria-label=\"Search\" onChange={this.handleSearchChange}/>\n      <button id=\"search\"className=\"btn btn-danger my-2 my-sm-0\" type=\"submit\"><a id=\"searcha\"className=\"nav-link\" href=\"/Search\">Search</a></button>\n    </form>\n    <ul id=\"ul\"className=\"navbar-nav ml-auto\">\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"/home\">Home <span className=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"/add\">Add</a>\n      </li>\n     \n    </ul>\n      \n    </div>\n    </div>\n   \n    </nav>\n        \n    \n    \n    <div>\n      \n\n{this.state.books.map((disp)=>{\n  if(this.state.Value==disp.Title){\n   \n    return(\n    \n<div key={disp.ISBN} id=\"main\">\n<div className=\"container\" >\n<div className=\"row\"  id=\"container\">\n<div id=\"inner\" className=\"card\">\n<div className=\"col-12 col-sm-12\" id=\"card\">\n<div  id=\"flip\"className=\"card-body\">\n<h3 className=\"mt-3\">{disp.Title}</h3>\n<p className=\"text-primary\">Author:{disp.Author}</p>\n<p>ISBN:{disp.ISBN}</p>\n<p>Date of Publication:{disp.PublicationDate}</p>\n<p>Publisher:{disp.Publisher}</p>\n<p>Price:{disp.Price}</p>\n<p>Genre:{disp.Genre}</p>\n<p>Format:{disp.Format}</p>\n\n\n</div>\n</div>\n</div>\n</div>\n</div>\n<br id=\"line\"/>\n\n</div>\n\n)\n    }  \n     if(this.state.Value==disp.Author) {\n      return(\n    \n        <div key={disp.ISBN} id=\"main\">\n        <div className=\"container\" >\n        <div className=\"row\"  id=\"container\">\n        <div id=\"inner\" className=\"card\">\n        <div className=\"col-12 col-sm-12\" id=\"card\">\n        <div  id=\"flip\"className=\"card-body\">\n        <h3 className=\"mt-3\">{disp.Title}</h3>\n        <p className=\"text-primary\">Author:{disp.Author}</p>\n        <p>ISBN:{disp.ISBN}</p>\n        <p>Date of Publication:{disp.PublicationDate}</p>\n        <p>Publisher:{disp.Publisher}</p>\n        <p>Price:{disp.Price}</p>\n        <p>Genre:{disp.Genre}</p>\n        <p>Format:{disp.Format}</p>\n        \n        \n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        <br id=\"line\"/>\n        \n        </div>\n        \n        )\n    }\n    if(this.state.Value==disp.Publisher) {\n      return(\n    \n        <div key={disp.ISBN} id=\"main\">\n        <div className=\"container\" >\n        <div className=\"row\"  id=\"container\">\n        <div id=\"inner\" className=\"card\">\n        <div className=\"col-12 col-sm-12\" id=\"card\">\n        <div  id=\"flip\"className=\"card-body\">\n        <h3 className=\"mt-3\">{disp.Title}</h3>\n        <p className=\"text-primary\">Author:{disp.Author}</p>\n        <p>ISBN:{disp.ISBN}</p>\n        <p>Date of Publication:{disp.PublicationDate}</p>\n        <p>Publisher:{disp.Publisher}</p>\n        <p>Price:{disp.Price}</p>\n        <p>Genre:{disp.Genre}</p>\n        <p>Format:{disp.Format}</p>\n        \n        \n        </div>\n        </div>\n        </div>\n        </div>\n        </div>\n        <br id=\"line\"/>\n        \n        </div>\n        \n        )\n    }\n})\n}\n\n</div>\n    \n\n\n    </div>\n  )\n}\n}\n\n\nexport default Navbar;\n","import React from 'react';\nimport axios from 'axios';\nimport Navbar from './Navigation'\n\n class Addexample extends React.Component{\nconstructor(props){\n    super()\n    this.state={\n        Store234:{ \n        Title:'',     \n        Author:'',\n        ISBN:'',\n        PublicationDate:'',\n        Publisher:'',\n        Price:'',\n        Genre:'',\n        Format:'',\n\n    }\n  \n    }\n}\n\nhandleChange=event=>{\n     this.setState({Author:event.target.value,\n        \n    });\n}\nhandleChange1=event=>{\n    this.setState({ISBN:event.target.value,\n       \n   });\n}\nhandleTitleChange=event=>{\n    this.setState({Title:event.target.value,\n       \n   });\n}\nhandlePublicationDateChange=event=>{\n    this.setState({PublicationDate:event.target.value,\n       \n   });\n}\nhandlePublisherChange=event=>{\n    this.setState({Publisher:event.target.value,\n       \n   });\n}\nhandlePriceChange=event=>{\n    this.setState({Price:event.target.value,\n       \n   });\n}\nhandleGenreChange=event=>{\n    this.setState({Genre:event.target.value,\n       \n   });\n}\nhandleFormatChange=event=>{\n    this.setState({Format:event.target.value,\n       \n   });\n}\n\n\n\n handleSubmit=event =>{\n    event.preventDefault();\n    this.state.Store234={\n        Title:this.state.Title,\n        Author:this.state.Author,\n        ISBN:this.state.ISBN,\n        PublicationDate:this.state.PublicationDate,\n        Publisher:this.state.Publisher,\n        Price:this.state.Price,\n        Genre:this.state.Genre,\n        Format:this.state.Format\n    };\n\naxios.post('http://172.105.60.143:3001/Store234',this.state.Store234)\n      .then(res=>{\n          console.log(res);\n          console.log(res.data);\n         \n         alert(\"The details have been added\");\n      })\n     /* .catch(function(error){\n          console.log('error');\n      })*/\n \n};\n\nrender(){\n    return(\n        <div >\n\n            <Navbar/>\n            <div className=\"container\">\n        <div id=\"form2\" >\n        <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n           \n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">Enter the Title:</label>\n            <div  className=\"col-md-6\"> \n            <input  type=\"text\" name=\"Title\" value={this.Title} onChange={this.handleTitleChange}/> \n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">Enter Authors Name:</label>\n            <div className=\"col-md-6\"> \n            <input type=\"text\"  name=\"Author\" value={this.Author} onChange={this.handleChange}/>\n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">\n            Enter ISBN:</label>\n            <div className=\"col-md-6\"> \n            <input type=\"text\"  name=\"ISBN\" value={this.ISBN} onChange={this.handleChange1}/>\n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">\n            Enter Publication Date:</label>\n            <div className=\"col-md-6\">\n            <input type=\"date\"  name=\"PublicationDate\" value={this.PublicationDate} onChange={this.handlePublicationDateChange}/>\n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">\n            Enter the Publisher Name:</label>\n            <div className=\"col-md-6\">\n            <input type=\"text\"  name=\"Publisher\" value={this.Publisher} onChange={this.handlePublisherChange}/>\n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">\n            Enter the Cost of the Book:</label>\n            <div className=\"col-md-6\">\n            <input type=\"text\"  name=\"Price\" value={this.Price} onChange={this.handlePriceChange}/>\n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">\n            Enter the Genre:</label>\n            <div className=\"col-md-6\">\n            <input type=\"text\"  name=\"Genre\" value={this.Genre} onChange={this.handleGenreChange}/>\n            </div>\n            </div>\n            <div className=\"form-group row\"> \n            <label for=\"firstname\" className=\"col-md-4 col-form-label\">\n            Enter the book Format:</label>\n            <div className=\"col-md-6\">\n            <input type=\"text\"  name=\"Format\" value={this.Format} onChange={this.handleFormatChange}/>\n            </div>\n            </div>\n            <br/><br/>\n            <button id=\"addbutton\" className=\"btn btn-danger\" type=\"submit\">Enter the Details</button>\n\n          \n        </form>\n           \n        </div>\n        </div>\n        </div>\n    )\n}\n}\n\nexport default Addexample;\n","import React from 'react';\nimport axios from 'axios';\n\n\nclass Update extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n          books:{\n              \n\n        }\n        }\n      }\n\n   componentDidMount(){\n        axios.get('http://172.105.60.143:3000/Store234'+'/'+this.props.id)\n          .then(res=>{\n            \n           this.books={\n          \n               \n\n           }=res.data\n            this.setState(this.books);\n         \n            console.log(res.data);\n          \n          })\n      }\n      handleChange=event=>{\n        this.setState({Author:event.target.value,\n           \n       });\n   }\n   handleChange1=event=>{\n       this.setState({ISBN:event.target.value,\n          \n      });\n   }\n   handleTitleChange=event=>{\n       this.setState({Title:event.target.value,\n          \n      });\n   }\n   handlePublicationDateChange=event=>{\n       this.setState({PublicationDate:event.target.value,\n          \n      });\n   }\n   handlePublisherChange=event=>{\n       this.setState({Publisher:event.target.value,\n          \n      });\n   }\n   handlePriceChange=event=>{\n       this.setState({Price:event.target.value,\n          \n      });\n   }\n   handleGenreChange=event=>{\n       this.setState({Genre:event.target.value,\n          \n      });\n   }\n   handleFormatChange=event=>{\n       this.setState({Format:event.target.value,\n          \n      });\n   }\n\n\n   handleSubmit=event=>{\n       event.preventDefault();\n       this.state.books={\n        Title:this.state.Title,\n        Author:this.state.Author,\n        ISBN:this.state.ISBN,\n        PublicationDate:this.state.PublicationDate,\n        Publisher:this.state.Publisher,\n        Price:this.state.Price,\n        Genre:this.state.Genre,\n        Format:this.state.Format\n    };\n    axios.put('http://localhost:3000/Store234'+'/'+this.props.id,this.state.books)\n    .then(res=>{\n        console.log(res);\n        console.log(res.data);\n       \n       alert(\"The details have been Updated\");\n    })\n\n\n};\n\n\n   \n   \n  \n   \n\n    render(){\n        return(\n            \n            <div id=\"upcard\">\n              \n                <div className=\"container\">\n                  <div className=\"row\">\n                      <div id=\"upgrad\" className=\"col-12 col-sm-12\">\n                                \n                                <div id=\"form3\" >\n                                <form className=\"mt-3\" onSubmit={this.handleSubmit}>   \n                                <div className=\"form-group row\"> \n                                <label id=\"label\" className=\"col-md-4 col-form-label\">Enter the Title:</label>\n                                <div  className=\"col-md-6\"> \n                                <input  type=\"text\" name=\"Title\" value={this.state.Title} onChange={this.handleTitleChange}/>\n                               \n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label id=\"label\" className=\"col-md-4 col-form-label\">Enter Authors Name:</label>\n                                <div className=\"col-md-6\"> \n                                <input type=\"text\"  name=\"Author\" value={this.state.Author} onChange={this.handleChange}/>\n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label  id=\"label\" className=\"col-md-4 col-form-label\">\n                                Enter ISBN:</label>\n                                <div className=\"col-md-6\"> \n                                <input type=\"text\"  name=\"ISBN\" value={this.state.ISBN} onChange={this.handleChange1}/>\n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label id=\"label\" className=\"col-md-4 col-form-label\">\n                                Enter Publication Date:</label>\n                                <div className=\"col-md-6\">\n                                <input type=\"date\"  name=\"PublicationDate\" value={this.state.PublicationDate} onChange={this. handlePublicationDateChange}/>\n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label id=\"label\" className=\"col-md-4 col-form-label\">\n                                Enter the Publisher Name:</label>\n                                <div className=\"col-md-6\">\n                                <input type=\"text\"  name=\"Publisher\" value={this.state.Publisher} onChange={this.handlePublisherChange}/>\n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label id=\"label\"  className=\"col-md-4 col-form-label\">\n                                Enter the Cost of the Book:</label>\n                                <div className=\"col-md-6\">\n                                <input type=\"text\"  name=\"Price\" value={this.state.Price} onChange={this.handlePriceChange}/>\n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label id=\"label\" className=\"col-md-4 col-form-label\">\n                                Enter the Genre:</label>\n                                <div className=\"col-md-6\">\n                                <input type=\"text\"  name=\"Genre\" value={this.state.Genre} onChange={this.handleGenreChange}/>\n                                </div>\n                                </div>\n                                <div className=\"form-group row\"> \n                                <label id=\"label\" className=\"col-md-4 col-form-label\">\n                                Enter the book Format:</label>\n                                <div className=\"col-md-6\">\n                                <input type=\"text\"  name=\"Format\" value={this.state.Format} onChange={this.handleFormatChange}/>\n                                </div>\n                                </div>\n                                <br/><br/>\n                                <button id=\"addbutton\" className=\"btn btn-danger\" type=\"submit\">Update</button>\n                                </form>\n           \n        </div>\n      \n        </div>\n        </div>\n        </div>\n        </div>\n            \n              \n           \n        )\n    }\n\n}\n\n\n\n\n\nexport default Update;\n","import React from 'react';\nimport axios from 'axios';\nimport Update from './Update.js';\nimport ReactDOM from 'react-dom';\nimport Navbar from './Navigation'\n\n\nclass Display extends React.Component {\n    constructor(props){\n      super()\n      this.state={\n        books:[\n          \n        ]\n      }\n    }\n \n    componentDidMount(){\n        axios.get('http://172.105.60.143:3000/Store234')\n          .then(res=>{\n            const books=res.data;\n           \n            this.setState({books});\n          \n          })\n      }\n     delbooks(id){\n        axios.delete('http://172.105.60.143:3000/Store234/' +id)\n        .then(res=>{\n            console.log(\"This id has been deleted\"+id);\n            alert(\"The book with id:\"+id+\"Has been deleted\");\n            //this.reload();\n              return(\n                axios.get('http://localhost:3000/Store234')\n              .then(res=>{\n              const books=res.data;\n              this.setState({books});\n        \n        })  \n              )\n          })\n      }\n     /* reload(){\n        axios.get('http://localhost:3000/Store234')\n        .then(res=>{\n          const books=res.data;\n         \n          this.setState({books});\n        \n        })\n      }*/\n      /*delbooks(id){\n         return(\n             <Delbooks id={id}/>\n         )\n         \n             \n          \n      }*/\n      upd(id){\n  \n          return(\n            ReactDOM.render(<Update id={id}/>, document.getElementById('root1'))\n            \n            \n          )\n       \n      }\n    \n   \n      \n      render(){\n        const update=()=>{\n          return(<Update/>)\n        }\n          return(\n            \n              <div>\n                \n                  <Navbar/>\n                  {this.state.books.map((disp)=>{\n                      //if(disp.Title==\"Sins of Father\")\n                      return(\n                  <div key={disp.ISBN} id=\"main\">\n                  <div className=\"container\" >\n                  <div className=\"row\"  id=\"container\">\n                  <div id=\"inner\" className=\"card\">\n                  <div className=\"col-12 col-sm-12\" id=\"card\">\n                  <div  id=\"flip\"className=\"card-body\">\n                  <h3 className=\"mt-3\">{disp.Title}</h3>\n                  <p className=\"text-primary\">Author:{disp.Author}</p>\n\t\t\t      <p>ISBN:{disp.ISBN}</p>\n\t\t\t      <p>Date of Publication:{disp.PublicationDate}</p>\n            <p>Publisher:{disp.Publisher}</p>\n                  <p>Price:{disp.Price}</p>\n                  <p>Genre:{disp.Genre}</p>\n                  <p>Format:{disp.Format}</p>\n                  <button id=\"update\"onClick={this.upd.bind(this,disp.id)} className=\"btn mr-2\"><a id=\"updatea\"href=\"#root1\">Update</a></button>\n                  <button id=\"delete\"onClick={this.delbooks.bind(this,disp.id)}  className=\"btn\">Delete</button>\n                  \n                  </div>\n                  </div>\n                  </div>\n                  </div>\n                  </div>\n                  <br id=\"line\"/>\n\n                  </div>\n  )\n                      \n  })\n  }\n \n              </div>\n          )\n      }\n\n\n\n\n}\n\nexport default Display;\n","import React from 'react';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport Addexample from './Components/Addexample.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from './Components/Display.js'\nimport {BrowserRouter} from \"react-router-dom\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from './Components/Navigation'\n\nimport Update from './Components/Update.js';\n\nclass App extends React.Component {\n  constructor(props){\n    super()\n    this.state={\n    \n    }\n  }\n \n  render(){\n\n    const home=()=>{\n      return(<Display/>)\n    }\n    const add=()=>{\n      return(<Addexample/>)\n    }\n    const update=()=>{\n      return(<Update/>)\n    }\n    const nav23=()=>{\n      return(<Navbar/>)\n    }\n  return (\n    <div className=\"App\">\n       <BrowserRouter>\n               <div >\n              \n                     \n                      <Switch>\n                          <Route path=\"/Search\" component={nav23}/>\n                          <Route path=\"/home\" component={home}/>\n                          <Route path=\"/add\" component={add}/>\n                          <Route path=\"/update\" component={update}/>\n\n                          <Redirect to=\"/home\"/>\n                       </Switch>\n              </div>\n                </BrowserRouter>\n    </div>\n  );\n}\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Navbar from './Components/Navigation'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}